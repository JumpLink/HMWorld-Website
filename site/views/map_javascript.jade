script
	function map_#{i}() {

		var tilewidth = !{map.tilewidth};
		var tileheight = !{map.tileheight};
		var tiles = !{map.tiles};
		var pxl_width = !{map.pxl_width};
		var pxl_height = !{map.pxl_height};
		var tilesets = [#{map.tilesets.length}];
		for(var t=0; t<#{map.tilesets.length}; t++) {
			tilesets[t] = new Image();
			tilesets[t].src = '/tilesetid/'+t;
		}
		var canvas = {};

		function loadCanvas(area_l) {
			var context = [area_l.to - area_l.from];
			var canvas = [area_l.to - area_l.from];
			for(var l=area_l.from;l<area_l.to;l++) {
				canvas[l] = document.getElementById('canvas_'+l);
				context[l] = canvas[l].getContext('2d');
			}
			return {context:context,canvas:canvas};
		}

		function drawTiles(area_l, area_x, area_y) {
			function draw(){
				for(var l=area_l.from;l<area_l.to;l++) {
					for(var y=area_y.from;y<area_y.to;y++) {
						for(var x=area_x.from;x<area_x.to;x++) {
							if(tiles[l][x][y].sx >= 0 && tiles[l][x][y].sy >= 0)
								canvas.context[l].drawImage(tilesets[tiles[l][x][y].ts_id], tiles[l][x][y].sx, tiles[l][x][y].sy, tilewidth, tileheight, tiles[l][x][y].dx, tiles[l][x][y].dy, tilewidth, tileheight);
						}
					}
				}
			}
			tilesets[0].onload=draw;
			window.onload=draw;
		}

		function draw() {
			canvas = loadCanvas(!{map.area_l});
			drawTiles(!{map.area_l}, !{map.area_x}, !{map.area_y});
		}
		draw();
		window.onunload = function(){};
	}
	map_#{i}();